{"version":3,"file":"index.js","sources":["../lib/utils.ts","../components/ui/avatar.tsx","../components/ui/button.tsx","../components/ui/card.tsx","../components/ui/input.tsx","../components/ui/scroll-area.tsx","../components/chatbot/chat-widget.tsx","../hooks/useChatBot.ts"],"sourcesContent":["import type { ClassValue } from \"clsx\";\nimport { clsx } from \"clsx\";\nimport { twMerge } from \"tailwind-merge\";\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n}","\"use client\"\n\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\"\nimport * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Avatar({\n  className,\n  ...props\n}: React.ComponentProps<typeof AvatarPrimitive.Root>) {\n  return (\n    <AvatarPrimitive.Root\n      data-slot=\"avatar\"\n      className={cn(\n        \"relative flex size-8 shrink-0 overflow-hidden rounded-full\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction AvatarImage({\n  className,\n  ...props\n}: React.ComponentProps<typeof AvatarPrimitive.Image>) {\n  return (\n    <AvatarPrimitive.Image\n      data-slot=\"avatar-image\"\n      className={cn(\"aspect-square size-full\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction AvatarFallback({\n  className,\n  ...props\n}: React.ComponentProps<typeof AvatarPrimitive.Fallback>) {\n  return (\n    <AvatarPrimitive.Fallback\n      data-slot=\"avatar-fallback\"\n      className={cn(\n        \"bg-muted flex size-full items-center justify-center rounded-full\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Avatar, AvatarFallback }\n","import { Slot } from \"@radix-ui/react-slot\"\nimport type { VariantProps } from \"class-variance-authority\"\nimport { cva } from \"class-variance-authority\"\nimport * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow-xs hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80\",\n        ghost:\n          \"hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2 has-[>svg]:px-3\",\n        sm: \"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5\",\n        lg: \"h-10 rounded-md px-6 has-[>svg]:px-4\",\n        icon: \"size-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nfunction Button({\n  className,\n  variant,\n  size,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"button\"> &\n  VariantProps<typeof buttonVariants> & {\n    asChild?: boolean\n  }) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"button\"\n      className={cn(buttonVariants({ variant, size, className }))}\n      {...props}\n    />\n  )\n}\n\nexport { Button, buttonVariants }\n","import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Card({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card\"\n      className={cn(\n        \"bg-card text-card-foreground flex flex-col gap-6 rounded-xl border shadow-sm\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-header\"\n      className={cn(\n        \"@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-title\"\n      className={cn(\"leading-none font-semibold\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardDescription({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardAction({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-action\"\n      className={cn(\n        \"col-start-2 row-span-2 row-start-1 self-start justify-self-end\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardContent({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-content\"\n      className={cn(\"px-6\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-footer\"\n      className={cn(\"flex items-center px-6 [.border-t]:pt-6\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Card, CardAction, CardContent, CardDescription, CardFooter, CardHeader, CardTitle\n}\n\n","import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Input({ className, type, ...props }: React.ComponentProps<\"input\">) {\n  return (\n    <input\n      type={type}\n      data-slot=\"input\"\n      className={cn(\n        \"file:text-foreground placeholder:text-muted-foreground selection:bg-primary selection:text-primary-foreground dark:bg-input/30 border-input flex h-9 w-full min-w-0 rounded-md border bg-transparent px-3 py-1 text-base shadow-xs transition-[color,box-shadow] outline-none file:inline-flex file:h-7 file:border-0 file:bg-transparent file:text-sm file:font-medium disabled:pointer-events-none disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        \"focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px]\",\n        \"aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Input }\n","\"use client\"\n\nimport * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction ScrollArea({\n  className,\n  children,\n  ...props\n}: React.ComponentProps<typeof ScrollAreaPrimitive.Root>) {\n  return (\n    <ScrollAreaPrimitive.Root\n      data-slot=\"scroll-area\"\n      className={cn(\"relative\", className)}\n      {...props}\n    >\n      <ScrollAreaPrimitive.Viewport\n        data-slot=\"scroll-area-viewport\"\n        className=\"focus-visible:ring-ring/50 size-full rounded-[inherit] transition-[color,box-shadow] outline-none focus-visible:ring-[3px] focus-visible:outline-1\"\n      >\n        {children}\n      </ScrollAreaPrimitive.Viewport>\n      <ScrollBar />\n      <ScrollAreaPrimitive.Corner />\n    </ScrollAreaPrimitive.Root>\n  )\n}\n\nfunction ScrollBar({\n  className,\n  orientation = \"vertical\",\n  ...props\n}: React.ComponentProps<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>) {\n  return (\n    <ScrollAreaPrimitive.ScrollAreaScrollbar\n      data-slot=\"scroll-area-scrollbar\"\n      orientation={orientation}\n      className={cn(\n        \"flex touch-none p-px transition-colors select-none\",\n        orientation === \"vertical\" &&\n          \"h-full w-2.5 border-l border-l-transparent\",\n        orientation === \"horizontal\" &&\n          \"h-2.5 flex-col border-t border-t-transparent\",\n        className\n      )}\n      {...props}\n    >\n      <ScrollAreaPrimitive.ScrollAreaThumb\n        data-slot=\"scroll-area-thumb\"\n        className=\"bg-border relative flex-1 rounded-full\"\n      />\n    </ScrollAreaPrimitive.ScrollAreaScrollbar>\n  )\n}\n\nexport { ScrollArea, ScrollBar }\n","\"use client\"\n\nimport { Avatar, AvatarFallback } from \"../../components/ui/avatar\"\nimport { Button } from \"../../components/ui/button\"\nimport { Card } from \"../../components/ui/card\"\nimport { Input } from \"../../components/ui/input\"\nimport { ScrollArea } from \"../../components/ui/scroll-area\"\nimport { cn } from \"../../lib/utils\"\n\nimport { Bot, MessageCircle, Send, User, X } from \"lucide-react\"\nimport React, { useEffect, useRef, useState } from 'react'\n\nexport interface Message {\n  id: string\n  role: 'user' | 'bot'\n  content: string\n  createdAt: Date\n}\n\nexport interface ChatBotProps {\n  initialMessages?: Message[]\n  placeholder?: string\n  onSendMessage?: (message: string) => void\n  position?: \"left\" | \"right\"\n  primaryColor?: string\n  title?: string\n  welcomeMessage?: string\n  onToggle?: (isOpen: boolean) => void\n  defaultOpen?: boolean\n  className?: string\n}\n\n\n\nexport const ChatWidget = ({\n  initialMessages = [],\n  placeholder = \"Digite sua mensagem...\",\n  onSendMessage,\n  position = \"left\",\n  primaryColor = \"hsl(var(--primary))\",\n  title = \"Assistente Virtual\",\n  welcomeMessage = \"Olá! Como posso ajudá-lo hoje?\",\n  onToggle,\n  defaultOpen = false,\n  className,\n}: ChatBotProps) => {\n  const [isOpen, setIsOpen] = useState(defaultOpen)\n  const [messages, setMessages] = useState<Message[]>(\n    initialMessages.length > 0 \n      ? initialMessages \n      : [\n          {\n            id: \"1\",\n            role: 'bot',\n            content: welcomeMessage,\n            createdAt: new Date(),\n          },\n        ]\n  )\n  const [inputValue, setInputValue] = useState(\"\")\n  const [isTyping, setIsTyping] = useState(false)\n  const messagesEndRef = useRef<HTMLDivElement>(null)\n  const inputRef = useRef<HTMLInputElement>(null)\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" })\n  }\n\n  useEffect(() => {\n    scrollToBottom()\n  }, [messages])\n\n  useEffect(() => {\n    if (isOpen && inputRef.current) {\n      inputRef.current.focus()\n    }\n  }, [isOpen])\n\n  const handleToggle = () => {\n    const newState = !isOpen\n    setIsOpen(newState)\n    onToggle?.(newState)\n  }\n\n  const handleSendMessage = async () => {\n    if (!inputValue.trim()) return\n\n    const userMessage: Message = {\n      id: Date.now().toString(),\n      role: 'user',\n      content: inputValue,\n      createdAt: new Date(),\n    }\n\n    setMessages((prev) => [...prev, userMessage])\n    setInputValue(\"\")\n    onSendMessage?.(inputValue)\n\n    setIsTyping(true)\n    setTimeout(() => {\n      const botMessage: Message = {\n        id: (Date.now() + 1).toString(),\n        role: 'bot',\n        content: `Obrigado pela sua mensagem: \"${inputValue}\". Como posso ajudá-lo mais?`,\n        createdAt: new Date(),\n      }\n      setMessages((prev) => [...prev, botMessage])\n      setIsTyping(false)\n    }, 1500)\n  }\n\n  const handleKeyPress = (e: React.KeyboardEvent) => {\n    if (e.key === \"Enter\" && !e.shiftKey) {\n      e.preventDefault()\n      handleSendMessage()\n    }\n  }\n\n  const positionClasses = {\n    left: \"left-6 bottom-6\",\n    right: \"right-6 bottom-6\",\n  }\n\n  const chatPositionClasses = {\n    left: \"left-6 bottom-24\",\n    right: \"right-6 bottom-24\",\n  }\n\n  return (\n    <div className={cn(\"fixed z-50\", className)}>\n      <div className={cn(\"fixed\", positionClasses[position])}>\n        <Button\n          onClick={handleToggle}\n          size=\"lg\"\n          className={cn(\n            \"h-14 w-14 rounded-full shadow-lg hover:shadow-xl transition-all duration-300 transform hover:scale-110\",\n            isOpen && \"rotate-180\",\n          )}\n          style={{ backgroundColor: primaryColor }}\n        >\n          {isOpen ? <X className=\"h-6 w-6\" /> : <MessageCircle className=\"h-6 w-6\" />}\n        </Button>\n      </div>\n\n      {isOpen && (\n        <div className={cn(\"fixed\", chatPositionClasses[position])}>\n          <Card className=\"w-80 h-96 shadow-2xl animate-in slide-in-from-bottom-5 duration-300\">\n            <div\n              className=\"flex items-center justify-between p-4 border-b rounded-t-lg text-white\"\n              style={{ backgroundColor: primaryColor }}\n            >\n              <div className=\"flex items-center gap-2\">\n                <Avatar className=\"h-8 w-8\">\n                  <AvatarFallback className=\"bg-white/20\">\n                    <Bot className=\"h-4 w-4\" />\n                  </AvatarFallback>\n                </Avatar>\n                <h3 className=\"font-semibold text-sm\">{title}</h3>\n              </div>\n              <Button\n                variant=\"ghost\"\n                size=\"sm\"\n                onClick={handleToggle}\n                className=\"text-white hover:bg-white/20 h-8 w-8 p-0\"\n              >\n                <X className=\"h-4 w-4\" />\n              </Button>\n            </div>\n\n            <ScrollArea className=\"flex-1 p-4 h-53\">\n              <div className=\"space-y-4\">\n                {messages.map((message) => (\n                  <div\n                    key={message.id}\n                    className={cn(\"flex gap-2\", message.role === 'user' ? \"justify-end\" : \"justify-start\")}\n                  >\n                    {message.role === 'bot' && (\n                      <Avatar className=\"h-6 w-6 mt-1\">\n                        <AvatarFallback className=\"bg-muted\">\n                          <Bot className=\"h-3 w-3\" />\n                        </AvatarFallback>\n                      </Avatar>\n                    )}\n                    <div\n                      className={cn(\n                        \"max-w-[70%] rounded-lg px-3 py-2 text-sm\",\n                        message.role === 'user'\n                          ? \"bg-primary text-primary-foreground\"\n                          : \"bg-muted text-muted-foreground\",\n                      )}\n                    >\n                      {message.content}\n                    </div>\n                    {message.role === 'user' && (\n                      <Avatar className=\"h-6 w-6 mt-1\">\n                        <AvatarFallback className=\"bg-primary\">\n                          <User className=\"h-3 w-3 text-primary-foreground\" />\n                        </AvatarFallback>\n                      </Avatar>\n                    )}\n                  </div>\n                ))}\n\n                {/* Indicador de digitação */}\n                {isTyping && (\n                  <div className=\"flex gap-2 justify-start\">\n                    <Avatar className=\"h-6 w-6 mt-1\">\n                      <AvatarFallback className=\"bg-muted\">\n                        <Bot className=\"h-3 w-3\" />\n                      </AvatarFallback>\n                    </Avatar>\n                    <div className=\"bg-muted rounded-lg px-3 py-2\">\n                      <div className=\"flex gap-1\">\n                        <div className=\"w-2 h-2 bg-muted-foreground rounded-full animate-bounce\" />\n                        <div\n                          className=\"w-2 h-2 bg-muted-foreground rounded-full animate-bounce\"\n                          style={{ animationDelay: \"0.1s\" }}\n                        />\n                        <div\n                          className=\"w-2 h-2 bg-muted-foreground rounded-full animate-bounce\"\n                          style={{ animationDelay: \"0.2s\" }}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                )}\n                <div ref={messagesEndRef} />\n              </div>\n            </ScrollArea>\n\n            {/* Input de Mensagem */}\n            <div className=\"p-4 border-t\">\n              <div className=\"flex gap-2\">\n                <Input\n                  ref={inputRef}\n                  value={inputValue}\n                  onChange={(e) => setInputValue(e.target.value)}\n                  onKeyPress={handleKeyPress}\n                  placeholder={placeholder}\n                  className=\"flex-1\"\n                />\n                <Button\n                  onClick={handleSendMessage}\n                  size=\"sm\"\n                  disabled={!inputValue.trim()}\n                  style={{ backgroundColor: primaryColor }}\n                >\n                  <Send className=\"h-4 w-4\" />\n                </Button>\n              </div>\n            </div>\n          </Card>\n        </div>\n      )}\n    </div>\n  )\n}","import { useMutation } from \"@tanstack/react-query\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\n\ninterface Message {\n  id: string;\n  sender: \"user\" | \"bot\";\n  text: string;\n}\n\nexport function useChatbot() {\n  const [messages, setMessages] = useState<Message[]>([]);\n\n  const sendMessageMutation = useMutation({\n    mutationFn: async (message: string) => {\n      const res = await axios.post(\"/api/chatbot\", { message });\n      return res.data;\n    },\n    onSuccess: (data, variables) => {\n      // adiciona a mensagem do usuário\n      setMessages((prev) => [\n        ...prev,\n        { id: crypto.randomUUID(), sender: \"user\", text: variables },\n      ]);\n\n      // adiciona a resposta do bot\n      setMessages((prev) => [\n        ...prev,\n        { id: crypto.randomUUID(), sender: \"user\", text: variables },\n        { id: crypto.randomUUID(), sender: \"bot\", text: data.reply },\n      ]);\n    },\n  });\n\n  const sendMessage = (text: string) => {\n    if (!text.trim()) return;\n    sendMessageMutation.mutate(text);\n  };\n\n  return {\n    messages,\n    sendMessage,\n    isLoading: sendMessageMutation.isPending,\n  };\n}\n"],"names":["cn","inputs","Array","_len","_key","arguments","twMerge","clsx","_excluded","_excluded3","Avatar","_ref","className","props","_objectWithoutPropertiesLoose","React","AvatarPrimitive","_extends","data-slot","AvatarFallback","_ref3","buttonVariants","cva","variants","variant","default","destructive","outline","secondary","ghost","link","size","sm","lg","icon","defaultVariants","Button","_ref$asChild","asChild","Slot","Card","Input","type","_excluded2","ScrollArea","children","ScrollAreaPrimitive","ScrollBar","_ref2","_ref2$orientation","orientation","initialMessages","_ref$initialMessages","_ref$placeholder","placeholder","onSendMessage","_ref$position","position","_ref$primaryColor","primaryColor","_ref$title","title","_ref$welcomeMessage","welcomeMessage","onToggle","_ref$defaultOpen","defaultOpen","_useState","useState","isOpen","setIsOpen","_useState2","length","id","role","content","createdAt","Date","messages","setMessages","_useState3","inputValue","setInputValue","_useState4","isTyping","setIsTyping","messagesEndRef","useRef","inputRef","useEffect","_messagesEndRef$curre","current","scrollIntoView","behavior","focus","handleToggle","newState","handleSendMessage","trim","Promise","resolve","userMessage","now","toString","prev","concat","setTimeout","botMessage","e","reject","createElement","left","right","onClick","style","backgroundColor","X","MessageCircle","Bot","map","message","key","User","animationDelay","ref","value","onChange","target","onKeyPress","shiftKey","preventDefault","disabled","Send","sendMessageMutation","useMutation","mutationFn","axios","post","then","res","data","onSuccess","variables","crypto","randomUUID","sender","text","reply","sendMessage","mutate","isLoading","isPending"],"mappings":"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"}